{"version":3,"file":"extension.js","mappings":"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","sources":["../external commonjs \"vscode\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap",".././src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nlet extensionContext: vscode.ExtensionContext;\r\nlet treeDataProvider: TreeDataProvider;\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\t\r\n\textensionContext = context;\r\n\ttreeDataProvider = new TreeDataProvider();\r\n\r\n\tvscode.window.registerTreeDataProvider('projectManagerTreeView', treeDataProvider);\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.addProject', () => {\r\n\t\tcreateProjectEntry();\r\n\t});\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.editEntry', (item) => {\r\n\t\t\r\n\t\tif(item.project === undefined && item.category !== undefined){\r\n\t\t\t// edit category\r\n\t\t\teditCategoryEntry(item.category._id);\r\n\t\t} else if(item.project !== undefined && item.category === undefined){\r\n\t\t\t// edit project\r\n\t\t\teditProjectEntry(item.project._id);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.deleteEntry', (item) => {\r\n\t\t\r\n\t\tvscode.window.showInformationMessage(\"You realy want to delete this?\", \"Yes\", \"No\").then(answer => {\r\n\t\t\tif (answer === \"Yes\") {\r\n\t\t\t\tif(item.project === undefined && item.category !== undefined){\r\n\t\t\t\t\t// delete category\r\n\t\t\t\t\tCategory.deleteById(item.category._id);\r\n\t\t\t\t} else if(item.project !== undefined && item.category === undefined){\r\n\t\t\t\t\t// delete project\r\n\t\t\t\t\tProject.deleteById(item.project._id);\r\n\t\t\t\t}\r\n\t\t\t\ttreeDataProvider.refresh();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.addCategory', () => {\r\n\t\tcreateCategoryEntry();\r\n\t});\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.openInNewWindow', (item) => {\r\n\t\t\r\n\t\tlet projectPathUri = vscode.Uri.file(item.project._path);\r\n\t\tvscode.commands.executeCommand('vscode.openFolder', projectPathUri, {\r\n\t\t\tforceNewWindow: true\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tvscode.commands.registerCommand('vscode-project-manager.openInWindow', (project) => {\r\n\t\t\r\n\t\tlet projectObj = Project.getOneById(project);\r\n\r\n\t\tif(projectObj !== null){\r\n\r\n\t\t\tlet uri = vscode.Uri.file(projectObj._path);\r\n\t\t\tvscode.commands.executeCommand('vscode.openFolder', uri);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n}\r\n\r\nasync function createProjectEntry(){\r\n\r\n\tif(vscode.workspace.workspaceFolders !== undefined && vscode.workspace.workspaceFolders?.length > 0){\r\n\r\n\t\tconst projectNameInput = await vscode.window.showInputBox({\r\n\t\t\tplaceHolder: 'Name',\r\n\t\t\tprompt: 'Please enter a name for the project that is shown in the sidebar'\r\n\t\t});\r\n\t\r\n\t\tif(projectNameInput !== undefined){\r\n\t\r\n\t\t\tif(projectNameInput === ''){\r\n\t\t\t\tvscode.window.showErrorMessage('A name for the project is required.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tlet treeStrings = Category.getTreeStrings();\r\n\t\t\tlet quickpickOptions:Array<string> = ['No one'];\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tquickpickOptions.push(value._string);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst parentCategoryInput = await vscode.window.showQuickPick(quickpickOptions, {\r\n\t\t\t\ttitle: 'Enter a category name or leave it empty for no category'\r\n\t\t\t});\r\n\t\r\n\t\t\t// check which parent cat is selected\r\n\t\t\tlet parentCatId = 0;\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tif(value._string === parentCategoryInput){\r\n\t\t\t\t\tparentCatId = value._catId;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t// get workspace opened folders\r\n\t\t\tlet projectPaths = Array<string>();\r\n\t\t\tvscode.workspace.workspaceFolders?.forEach(function(value){\r\n\t\t\t\tprojectPaths.push(value.uri.fsPath.toString());\r\n\t\t\t});\r\n\t\t\tlet projectPath = projectPaths[0];\r\n\t\t\t\r\n\t\t\tlet projectEntry = new Project(projectPath, projectNameInput, parentCatId);\r\n\t\t\tprojectEntry.save();\r\n\t\r\n\t\t\ttreeDataProvider.refresh();\r\n\t\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tvscode.window.showErrorMessage('One folder must been added to current workspace to save it.');\r\n\t}\r\n\r\n}\r\n\r\nasync function editCategoryEntry(categoryId:number){\r\n\r\n\tlet category:Category|null = Category.getOneById(categoryId);\r\n\r\n\tif(category !== null){\r\n\r\n\t\tconst categoryNameInput = await vscode.window.showInputBox({\r\n\t\t\tplaceHolder: 'Name',\r\n\t\t\tprompt: 'Please enter a name for the category that is shown in the sidebar',\r\n\t\t\tvalue: category?._name\r\n\t\t});\r\n\t\r\n\t\tif(categoryNameInput !== undefined){\r\n\t\r\n\t\t\tif(categoryNameInput === ''){\r\n\t\t\t\tvscode.window.showErrorMessage('A name for the category is required.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tlet treeStrings = Category.getTreeStrings();\r\n\t\t\tlet quickpickOptions:Array<string> = ['No one'];\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tif(value._catId !== categoryId){\r\n\t\t\t\t\tquickpickOptions.push(value._string);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\tconst parentCategoryInput = await vscode.window.showQuickPick(quickpickOptions, {\r\n\t\t\t\ttitle: 'Select a parent category or No one for a root category'\r\n\t\t\t});\r\n\t\r\n\t\t\t// check which parent cat is selected\r\n\t\t\tlet parentCatId = 0;\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tif(value._string === parentCategoryInput){\r\n\t\t\t\t\tparentCatId = value._catId;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tlet categoryEntry = new Category(categoryNameInput, parentCatId);\r\n\t\t\tcategoryEntry._id = category._id;\r\n\t\t\tcategoryEntry.save();\r\n\r\n\t\t\ttreeDataProvider.refresh();\r\n\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nasync function editProjectEntry(projectId:number){\r\n\r\n\tlet project:Project|null = Project.getOneById(projectId);\r\n\r\n\tif(project !== null){\r\n\r\n\t\tconst projectNameInput = await vscode.window.showInputBox({\r\n\t\t\tplaceHolder: 'Name',\r\n\t\t\tprompt: 'Please enter a name for the project that is shown in the sidebar',\r\n\t\t\tvalue: project._name\r\n\t\t});\r\n\r\n\t\tif(projectNameInput !== undefined){\r\n\r\n\t\t\tif(projectNameInput === ''){\r\n\t\t\t\tvscode.window.showErrorMessage('A name for the project is required.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tlet treeStrings = Category.getTreeStrings();\r\n\t\t\tlet quickpickOptions:Array<string> = ['No one'];\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tquickpickOptions.push(value._string);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst parentCategoryInput = await vscode.window.showQuickPick(quickpickOptions, {\r\n\t\t\t\ttitle: 'Enter a category name or leave it empty for no category'\r\n\t\t\t});\r\n\t\r\n\t\t\t// check which parent cat is selected\r\n\t\t\tlet parentCatId = 0;\r\n\t\t\ttreeStrings.forEach(function(value){\r\n\t\t\t\tif(value._string === parentCategoryInput){\r\n\t\t\t\t\tparentCatId = value._catId;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t// get workspace opened folders\r\n\t\t\tlet projectPaths = Array<string>();\r\n\t\t\tvscode.workspace.workspaceFolders?.forEach(function(value){\r\n\t\t\t\tprojectPaths.push(value.uri.fsPath.toString());\r\n\t\t\t});\r\n\t\t\tlet projectPath = projectPaths[0];\r\n\t\t\t\r\n\t\t\tlet editProject = new Project(projectPath, projectNameInput, parentCatId);\r\n\t\t\teditProject._id = project._id;\r\n\t\t\teditProject.save();\r\n\r\n\t\t\ttreeDataProvider.refresh();\r\n\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nasync function createCategoryEntry(){\r\n\r\n\tconst categoryNameInput = await vscode.window.showInputBox({\r\n\t\tplaceHolder: 'Name',\r\n\t\tprompt: 'Please enter a name for the category that is shown in the sidebar'\r\n\t});\r\n\r\n\tif(categoryNameInput !== undefined){\r\n\r\n\t\tif(categoryNameInput === ''){\r\n\t\t\tvscode.window.showErrorMessage('A name for the category is required.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet treeStrings = Category.getTreeStrings();\r\n\t\tlet quickpickOptions:Array<string> = ['No one'];\r\n\t\ttreeStrings.forEach(function(value){\r\n\t\t\tquickpickOptions.push(value._string);\r\n\t\t});\r\n\r\n\t\tconst parentCategoryInput = await vscode.window.showQuickPick(quickpickOptions, {\r\n\t\t\ttitle: 'Select a parent category or No one for a root category'\r\n\t\t});\r\n\r\n\t\t// check which parent cat is selected\r\n\t\tlet parentCatId = 0;\r\n\t\ttreeStrings.forEach(function(value){\r\n\t\t\tif(value._string === parentCategoryInput){\r\n\t\t\t\tparentCatId = value._catId;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tlet categoryEntry = new Category(categoryNameInput, parentCatId);\r\n\t\tcategoryEntry.save();\r\n\r\n\t\ttreeDataProvider.refresh();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport function deactivate() {}\r\n\r\nclass TreeDataProvider implements vscode.TreeDataProvider<TreeItem> {\r\n\t\r\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<TreeItem | undefined | null | void> = new vscode.EventEmitter<TreeItem | undefined | null | void>();\r\n\treadonly onDidChangeTreeData: vscode.Event<TreeItem | undefined | null | void> = this._onDidChangeTreeData.event;\r\n  \r\n\trefresh(): void {\r\n\t\tthis.data = Category.getTreeItemsWithProjects();\r\n\t  \tthis._onDidChangeTreeData.fire();\r\n\t}\r\n\r\n\tdata: TreeItem[];\r\n  \r\n\tconstructor() {\r\n\t\tthis.data = Category.getTreeItemsWithProjects();\r\n\t}\r\n  \r\n\tgetTreeItem(element: TreeItem): vscode.TreeItem|Thenable<vscode.TreeItem> {\r\n\t  \treturn element;\r\n\t}\r\n  \r\n\tgetChildren(element?: TreeItem|undefined): vscode.ProviderResult<TreeItem[]> {\r\n\t  \tif(element === undefined){\r\n\t\t\treturn this.data;\r\n\t  \t}\r\n\t  \treturn element.children;\r\n\t}\r\n\r\n}\r\n  \r\nclass TreeItem extends vscode.TreeItem {\r\n\t\r\n\tchildren: TreeItem[]|undefined;\r\n\tproject?: Project;\r\n\tcategory?: Category;\r\n  \r\n\tconstructor(label: string, children?: TreeItem[], project?: Project, category?: Category) {\r\n\t  \tsuper(\r\n\t\t  \tlabel,\r\n\t\t  \tchildren === undefined ? vscode.TreeItemCollapsibleState.None :\r\n\t\t\t\t\t\t\t\t\t\tvscode.TreeItemCollapsibleState.Expanded\r\n\t\t);\r\n\t \tthis.children = children;\r\n\t  \tthis.project = project;\r\n\t\tthis.category = category;\r\n\t\t\r\n\t\tif(this.project === undefined){\r\n\t\t\tthis.iconPath = new vscode.ThemeIcon(\"layers\");\r\n\t\t\tthis.contextValue = 'TreeItemCategory';\r\n\t\t} else {\r\n\t\t\tthis.iconPath = new vscode.ThemeIcon(\"folder\");\r\n\t\t\tthis.contextValue = 'TreeItemProject';\r\n\t\t\tthis.command = {\r\n\t\t\t\tcommand: 'vscode-project-manager.openInWindow',\r\n\t\t\t\ttitle: 'openInWindow',\r\n\t\t\t\targuments: [this.project?._id]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\t  \r\n\r\n}\r\n\r\nclass Project {\r\n\r\n\t_id: number;\r\n\t_path: string;\r\n\t_name: string;\r\n\t_categoryId: number;\r\n\r\n\tconstructor(path: string, name: string, categoryId: number = 0){\r\n\t\tthis._id = this.getNextId();\r\n\t\tthis._path = path;\r\n\t\tthis._name = name;\r\n\t\tthis._categoryId = categoryId;\r\n\t}\r\n\r\n\tprivate getNextId(){\r\n\r\n\t\tlet latestId = 0;\r\n\t\tconst existingProjects = Project.getAll();\r\n\t\texistingProjects.forEach(function(value){\r\n\t\t\tif(value._id > latestId){\r\n\t\t\t\tlatestId = value._id;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn latestId + 1;\r\n\r\n\t}\r\n\r\n\tsave(){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tProject.checkFolderandFiles();\r\n\t\t\r\n\t\t// read projects.json and add the project\r\n\t\tlet existingProjects:Array<Project> = Project.getAll();\r\n\t\tfor(let i = 0; i < existingProjects.length; i++){\r\n\t\t\tif(this._id === existingProjects[i]._id){\r\n\t\t\t\texistingProjects.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\texistingProjects.push(this);\r\n\r\n\t\t// write data to projects.json\r\n\t\tfs.writeFileSync(\r\n\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'projects.json'),\r\n\t\t\tJSON.stringify(existingProjects));\r\n\r\n\t}\r\n\r\n\tpublic static deleteById(projectId:number){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tProject.checkFolderandFiles();\r\n\t\t\r\n\t\t// read projects.json and add the project\r\n\t\tlet existingProjects:Array<Project> = Project.getAll();\r\n\t\tfor(let i = 0; i < existingProjects.length; i++){\r\n\t\t\tif(existingProjects[i]._id === projectId){\r\n\t\t\t\texistingProjects.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// write data to projects.json\r\n\t\tfs.writeFileSync(\r\n\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'projects.json'),\r\n\t\t\tJSON.stringify(existingProjects));\r\n\r\n\t}\r\n\r\n\tpublic static getOneById(projectId: number):Project|null {\r\n\r\n\t\tlet projects: Array<Project> = Project.getAll();\r\n\t\tlet searchedProject = null;\r\n\t\tprojects.forEach(function(value){\r\n\t\t\tif(value._id === projectId){\r\n\t\t\t\tsearchedProject = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn searchedProject;\r\n\r\n\t}\r\n\r\n\tpublic static getAllByCategoryId(catId: number){\r\n\r\n\t\tlet projects: Array<Project> = Project.getAll();\r\n\t\tlet projectsByCat: Array<Project> = [];\r\n\t\tprojects.forEach(function(value){\r\n\t\t\tif(value._categoryId === catId){\r\n\t\t\t\tprojectsByCat.push(value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn projectsByCat;\r\n\r\n\t}\r\n\r\n\tpublic static getAll(){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tProject.checkFolderandFiles();\r\n\r\n\t\tlet existingProjects:Array<Project> = JSON.parse(fs.readFileSync(path.join(extensionContext.globalStorageUri.fsPath.toString(), 'projects.json')).toString());\r\n\t\treturn existingProjects;\r\n\r\n\t}\r\n\r\n\tpublic static checkFolderandFiles(){\r\n\r\n\t\t// create extension global storage folder if not exist\r\n\t\tif (!fs.existsSync(extensionContext.globalStorageUri.fsPath.toString())) {\r\n\t\t\tfs.mkdirSync(extensionContext.globalStorageUri.fsPath.toString());\r\n\t\t}\r\n\r\n\t\t// check if projects file exist and if not create it\r\n\t\tif (!fs.existsSync(path.join(extensionContext.globalStorageUri.fsPath.toString(), 'projects.json'))) {\r\n\t\t\tfs.writeFileSync(\r\n\t\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'projects.json'),\r\n\t\t\t\tJSON.stringify([]));\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Category {\r\n\r\n\t_id: number;\r\n\t_parentId: number;\r\n\t_name: string;\r\n\tchildren: Array<Category>;\r\n\r\n\tconstructor(name: string, parentId: number){\r\n\r\n\t\tthis._id = this.getNextId();\r\n\t\tthis._parentId = parentId;\r\n\t\tthis._name = name;\r\n\t\tthis.children = [];\r\n\r\n\t}\r\n\r\n\tsave(){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tCategory.checkFolderandFiles();\r\n\t\t\r\n\t\t// read categories.json and add the category\r\n\t\tlet existingCategories:Array<Category> = Category.getAll();\r\n\t\tfor(let i = 0; i < existingCategories.length; i++){\r\n\t\t\tif(this._id === existingCategories[i]._id){\r\n\t\t\t\texistingCategories.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\texistingCategories.push(this);\r\n\r\n\t\t// write data to categories.json\r\n\t\tfs.writeFileSync(\r\n\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'categories.json'),\r\n\t\t\tJSON.stringify(existingCategories));\r\n\r\n\t}\r\n\r\n\tpublic static deleteById(categoryId:number){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tCategory.checkFolderandFiles();\r\n\t\t\r\n\t\t// read categories.json and remove the project\r\n\t\tlet existingCategories:Array<Category> = Category.getAll();\r\n\t\tfor(let i = 0; i < existingCategories.length; i++){\r\n\t\t\tif(existingCategories[i]._id === categoryId){\r\n\t\t\t\texistingCategories.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// write data to projects.json\r\n\t\tfs.writeFileSync(\r\n\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'categories.json'),\r\n\t\t\tJSON.stringify(existingCategories));\r\n\r\n\t\t// change projects category id if the current id is the deleted id\r\n\t\tlet existingProjects:Array<Project> = Project.getAll();\r\n\t\texistingProjects.forEach(function(value){\r\n\t\t\tif(value._categoryId === categoryId){\r\n\t\t\t\tvalue._categoryId = 0;\r\n\t\t\t\tvalue.save();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tprivate getNextId(){\r\n\r\n\t\tlet latestId = 0;\r\n\t\tconst existingCategories = Category.getAll();\r\n\t\texistingCategories.forEach(function(value){\r\n\t\t\tif(value._id > latestId){\r\n\t\t\t\tlatestId = value._id;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn latestId + 1;\r\n\r\n\t}\r\n\r\n\tpublic static getTreeStrings():Array<TreeString>{\r\n\r\n\t\tlet categories = Category.getAll();\r\n\t\t\r\n\t\tlet strings:Array<TreeString> = [];\r\n\t\tcategories.forEach(function(value){\r\n\t\t\tlet arrowname = Category.createArrowName(value, categories);\r\n\t\t\tstrings.push(new TreeString(arrowname, value._id));\r\n\t\t});\r\n\r\n\t\treturn strings;\r\n\r\n\t}\r\n\r\n\tprivate static createArrowName(category:Category, categories:Array<Category>){\r\n\r\n\t\tlet arrowname = category._name;\r\n\t\tif(category._parentId !== 0){\r\n\t\t\tcategories.forEach(function(value){\r\n\t\t\t\tif(value._id === category._parentId){\r\n\t\t\t\t\tif(value._parentId !== 0){\r\n\t\t\t\t\t\tarrowname = Category.createArrowName(value, categories) + ' < ' + arrowname;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarrowname = value._name + ' < ' + arrowname;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn arrowname;\r\n\r\n\t}\r\n\r\n\tprivate static makeTree(categoryNodes: Category[]): Category[] {\r\n\r\n\t\tconst nodesMap = new Map<number, Category>(\r\n\t\t\tcategoryNodes.map(node => [node._id, node])\r\n\t\t);\r\n\t\r\n\t\tconst virtualRoot = { } as Partial<Category>;\r\n\t\tcategoryNodes.forEach((node, i) => {\r\n\t\t\tconst parent = nodesMap.get(node._parentId) ?? virtualRoot;\r\n\t\t\t(parent.children ??= []).push(node);\r\n\t\t});\r\n\t\r\n\t\treturn virtualRoot.children ?? [];\r\n\t}\r\n\r\n\tpublic static getTreeItemsWithProjects(){\r\n\r\n\t\tlet catTree: Array<Category> = Category.makeTree(Category.getAll());\r\n\t\tlet treeItems:Array<TreeItem> = [];\r\n\t\tcatTree.forEach(function(value){\r\n\t\t\ttreeItems.push(Category.createTreeItem(value));\r\n\t\t});\r\n\t\t// add tree items where not in a category\r\n\t\tlet projects = Project.getAllByCategoryId(0);\r\n\t\tprojects.forEach(function(value){\r\n\t\t\ttreeItems.push(new TreeItem(value._name, undefined, value));\r\n\t\t});\r\n\r\n\t\treturn treeItems;\r\n\r\n\t}\r\n\r\n\tprivate static createTreeItem(category: Category){\r\n\r\n\t\tlet children:Array<TreeItem> = [];\r\n\t\t// add cat childs\r\n\t\tif(category.children !== undefined){\r\n\t\t\tcategory.children.forEach(function(value){\r\n\t\t\t\tchildren.push(Category.createTreeItem(value));\r\n\t\t\t});\r\n\t\t}\r\n\t\t// add project childs\r\n\t\tlet projects = Project.getAllByCategoryId(category._id);\r\n\t\tprojects.forEach(function(value){\r\n\t\t\tchildren.push(new TreeItem(value._name, undefined, value));\r\n\t\t});\r\n\r\n\t\tlet treeItem = new TreeItem(category._name, children, undefined, category);\r\n\t\treturn treeItem;\r\n\r\n\t}\r\n\r\n\tpublic static getAll(){\r\n\r\n\t\t// check if folders and files exist\r\n\t\tCategory.checkFolderandFiles();\r\n\r\n\t\tlet existingCategories:Array<Category> = JSON.parse(fs.readFileSync(path.join(extensionContext.globalStorageUri.fsPath.toString(), 'categories.json')).toString());\r\n\t\treturn existingCategories;\r\n\r\n\t}\r\n\r\n\tpublic static getOneById(categoryId: number):Category|null {\r\n\r\n\t\tlet categories: Array<Category> = Category.getAll();\r\n\t\tlet searchedCategory = null;\r\n\t\tcategories.forEach(function(value){\r\n\t\t\tif(value._id === categoryId){\r\n\t\t\t\tsearchedCategory = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn searchedCategory;\r\n\r\n\t}\r\n\r\n\tpublic static checkFolderandFiles(){\r\n\r\n\t\t// create extension global storage folder if not exist\r\n\t\tif (!fs.existsSync(extensionContext.globalStorageUri.fsPath.toString())) {\r\n\t\t\tfs.mkdirSync(extensionContext.globalStorageUri.fsPath.toString());\r\n\t\t}\r\n\r\n\t\t// check if projects file exist and if not create it\r\n\t\tif (!fs.existsSync(path.join(extensionContext.globalStorageUri.fsPath.toString(), 'categories.json'))) {\r\n\t\t\tfs.writeFileSync(\r\n\t\t\t\tpath.join(extensionContext.globalStorageUri.fsPath.toString(), 'categories.json'),\r\n\t\t\t\tJSON.stringify([]));\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TreeString {\r\n\r\n\t_string: string;\r\n\t_catId: number;\r\n\r\n\tconstructor(string: string, catId: number){\r\n\t\tthis._string = string;\r\n\t\tthis._catId = catId;\r\n\t}\r\n\r\n}"],"names":[],"sourceRoot":""}